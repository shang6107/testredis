<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.test.redis.controller"/>

    <!--视图解析器-->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INFO/views/"/>
        <property name="suffix" value=".ftl"/>
    </bean>-->

    <bean id="freemarkerResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="order" value="1" />
        <property name="suffix" value=".ftl" />
        <property name="contentType" value="text/html;charset=utf-8" />
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value>
        </property>
        <!--可以在Freemarker页面中使用表达式访问Request属性-->
        <property name="exposeRequestAttributes" value="true" />
        <!--可以在Freemarker页面中使用表达式访问Session属性-->
        <property name="exposeSessionAttributes" value="true" />
        <!--使用上面两个宏，必须设置exposeSpringMacroHelpers属性为true-->
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="allowRequestOverride" value="true"/>
        <property name="allowSessionOverride" value="true"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
        <property name="exposePathVariables" value="true"/>
        <!-- 在页面中使用${rc.contextPath}就可获得contextPath -->
        <property name="requestContextAttribute" value="request" />
        <property name="cache" value="false" />

    </bean>

    <!-- ===================================================== -->
    <!-- ViewResolver For FreeMarkerConfigurer -->
    <!-- ===================================================== -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/views"/>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape" />
            </map>
        </property>
        <property name="freemarkerSettings"><!-- 设置FreeMarker环境属性 -->
            <props>
                <prop key="template_update_delay">5</prop><!--刷新模板的周期，单位为秒 -->
                <prop key="default_encoding">UTF-8</prop><!--模板的编码格式 -->
                <prop key="locale">UTF-8</prop><!-- 本地化设置 -->
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="number_format">0.####</prop>
                <prop key="boolean_format">true,false</prop>
                <prop key="whitespace_stripping">true</prop>
                <prop key="tag_syntax">auto_detect</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
            </props>
        </property>
    </bean>
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
    <!--<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />-->
    <!--国际化bean  注意：这个bean的ID必须为 messageSource -->
    <bean class="org.springframework.context.support.ResourceBundleMessageSource"
            id="messageSource">
        <!--配置一个消息文件-->
        <!--<property name="basename" value="i18n"/>-->
        <!--
        配置多个消息文件
        <property name="basenames">
            <set>
                <value>i18n</value>
                <value>ValidationMessages</value>
            </set>
        </property>
        -->
    </bean>

    <!--配置验证bean，配置了该bean后，验证出错时错误消息使用EL表达式-->
    <bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"
        id="validator">
        <!--提供验证功能的类-->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!--消息来源-->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!--将自定义类型转换器加入到默认的类型转换器中：-->
    <!--<bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean" id="conversionService">
        <property name="converters">
            <set>
                <ref bean="myConverterService"/>
            </set>
        </property>
    </bean>-->

    <!--把配置好的类型转换器注册到IOC容器中 conversion-service属性  -->
    <!--把配置好的验证器注册到IOC容器中 validator属性 -->
    <mvc:annotation-driven validator="validator"/>
    <mvc:default-servlet-handler />
</beans>